service: consultant-profile

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs4.3
  stage: dev
  #role:
  versionFunctions: false
  environment:
    CONSULTANT_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

custom:
  s3bucketname: Haedlight-CustomerProfile

functions:
  saveCandidateProfile:
    handler: src/saveprofile.update
    description: Updating existing candidate profile
    events:
      - http:
          path: update
          method: post
  createCandidateProfile:
    handler: src/createprofile.insert
    description: Creating new candidate profile
    events:
      - http:
          path: insert
          method: put
  fetchCandidateProfile:
    handler: src/fetchprofile.fetch
    description: Fetching existing candidate profile
    events:
      - http:
          path: fetch/{id}
          method: get
  deleteCandidateProfile:
    handler: src/deleteprofile.delete
    description: Deleting candidate profile
    events:
      - http:
          path: delete
          method: delete
  listallCandidateProfile:
    handler: src/listprofile.listall
    description: All candidate profile
    events:
      - http:
          path: all
          method: get
resources:
  Resources:
    ConsultantDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      #DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.CONSULTANT_TABLE}